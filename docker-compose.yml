# ========================================
# DOCKER COMPOSE - DEV ENVIRONMENT
# ========================================
# Questo file supporta il FACTOR X: Dev/Prod Parity
# - Stessa immagine Docker usata in produzione
# - Ambiente di sviluppo locale consistente
# - Backing services locali (esempio: PostgreSQL, Redis)

version: '3.8'

services:
  # ========================================
  # Application Service
  # ========================================
  app:
    build:
      context: .
      dockerfile: Dockerfile  # âœ… Stesso Dockerfile di produzione
    image: twelve-factor-demo:1.0.0
    container_name: twelve-factor-app
    
    # FACTOR VII: Port Binding
    ports:
      - "8080:8080"
    
    # FACTOR III: Config - Environment variables per dev
    environment:
      - SERVER_PORT=8080
      - GREETING_PREFIX=Hello from Docker Compose
      - APP_VERSION=1.0.0-dev
      - SPRING_PROFILES_ACTIVE=dev
      # FACTOR IV: Backing Services (se configurati)
      # - DATABASE_URL=jdbc:postgresql://postgres:5432/devdb
      # - DB_USERNAME=postgres
      # - DB_PASSWORD=devpassword
      # - REDIS_HOST=redis
      # - REDIS_PORT=6379
    
    # FACTOR IX: Disposability
    restart: unless-stopped
    
    # FACTOR VI: Processes - Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
    
    # Dipendenze da backing services (quando configurati)
    # depends_on:
    #   - postgres
    #   - redis
    
    # FACTOR XI: Logs - Output su stdout, Docker li raccoglie
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    networks:
      - twelve-factor-network

  # ========================================
  # FACTOR IV: Backing Services - PostgreSQL (esempio)
  # ========================================
  # Decommentare per aggiungere database locale
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: twelve-factor-postgres
  #   environment:
  #     - POSTGRES_DB=devdb
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=devpassword
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - twelve-factor-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # ========================================
  # FACTOR IV: Backing Services - Redis (esempio)
  # ========================================
  # Decommentare per aggiungere cache locale
  # redis:
  #   image: redis:7-alpine
  #   container_name: twelve-factor-redis
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - twelve-factor-network
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 3s
  #     retries: 5

  # ========================================
  # FACTOR XII: Admin - Prometheus (monitoring - opzionale)
  # ========================================
  # Decommentare per monitoring locale
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: twelve-factor-prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #   networks:
  #     - twelve-factor-network
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'

networks:
  twelve-factor-network:
    driver: bridge

# volumes:
#   postgres_data:
#   redis_data:
